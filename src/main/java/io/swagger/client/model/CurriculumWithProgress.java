/*
 * BombBomb
 * We make it easy to build relationships using simple videos.
 *
 * OpenAPI spec version: 2.0.831
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CurriculumUserProgress;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * The CurriculumWithProgress class
 */
@ApiModel(description = "The CurriculumWithProgress class")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-30T19:45:38.826Z")
public class CurriculumWithProgress {
  @SerializedName("progress")
  private List<CurriculumUserProgress> progress = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("htmlIntro")
  private String htmlIntro = null;

  @SerializedName("imgUrl")
  private String imgUrl = null;

  @SerializedName("itemCount")
  private Integer itemCount = null;

  @SerializedName("renderAs")
  private String renderAs = null;

  @SerializedName("visibleToAllUsers")
  private Boolean visibleToAllUsers = null;

  public CurriculumWithProgress progress(List<CurriculumUserProgress> progress) {
    this.progress = progress;
    return this;
  }

  public CurriculumWithProgress addProgressItem(CurriculumUserProgress progressItem) {
    if (this.progress == null) {
      this.progress = new ArrayList<CurriculumUserProgress>();
    }
    this.progress.add(progressItem);
    return this;
  }

   /**
   * Collection of User Progress for Curriculum
   * @return progress
  **/
  @ApiModelProperty(value = "Collection of User Progress for Curriculum")
  public List<CurriculumUserProgress> getProgress() {
    return progress;
  }

  public void setProgress(List<CurriculumUserProgress> progress) {
    this.progress = progress;
  }

  public CurriculumWithProgress id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Id
   * @return id
  **/
  @ApiModelProperty(value = "Id")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public CurriculumWithProgress name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name
   * @return name
  **/
  @ApiModelProperty(value = "Name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CurriculumWithProgress htmlIntro(String htmlIntro) {
    this.htmlIntro = htmlIntro;
    return this;
  }

   /**
   * HTML formatted intro
   * @return htmlIntro
  **/
  @ApiModelProperty(value = "HTML formatted intro")
  public String getHtmlIntro() {
    return htmlIntro;
  }

  public void setHtmlIntro(String htmlIntro) {
    this.htmlIntro = htmlIntro;
  }

  public CurriculumWithProgress imgUrl(String imgUrl) {
    this.imgUrl = imgUrl;
    return this;
  }

   /**
   * URI of header image
   * @return imgUrl
  **/
  @ApiModelProperty(value = "URI of header image")
  public String getImgUrl() {
    return imgUrl;
  }

  public void setImgUrl(String imgUrl) {
    this.imgUrl = imgUrl;
  }

  public CurriculumWithProgress itemCount(Integer itemCount) {
    this.itemCount = itemCount;
    return this;
  }

   /**
   * Number of curriculum items
   * @return itemCount
  **/
  @ApiModelProperty(value = "Number of curriculum items")
  public Integer getItemCount() {
    return itemCount;
  }

  public void setItemCount(Integer itemCount) {
    this.itemCount = itemCount;
  }

  public CurriculumWithProgress renderAs(String renderAs) {
    this.renderAs = renderAs;
    return this;
  }

   /**
   * Render method for curriculum
   * @return renderAs
  **/
  @ApiModelProperty(value = "Render method for curriculum")
  public String getRenderAs() {
    return renderAs;
  }

  public void setRenderAs(String renderAs) {
    this.renderAs = renderAs;
  }

  public CurriculumWithProgress visibleToAllUsers(Boolean visibleToAllUsers) {
    this.visibleToAllUsers = visibleToAllUsers;
    return this;
  }

   /**
   * Globally visible
   * @return visibleToAllUsers
  **/
  @ApiModelProperty(value = "Globally visible")
  public Boolean isVisibleToAllUsers() {
    return visibleToAllUsers;
  }

  public void setVisibleToAllUsers(Boolean visibleToAllUsers) {
    this.visibleToAllUsers = visibleToAllUsers;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CurriculumWithProgress curriculumWithProgress = (CurriculumWithProgress) o;
    return Objects.equals(this.progress, curriculumWithProgress.progress) &&
        Objects.equals(this.id, curriculumWithProgress.id) &&
        Objects.equals(this.name, curriculumWithProgress.name) &&
        Objects.equals(this.htmlIntro, curriculumWithProgress.htmlIntro) &&
        Objects.equals(this.imgUrl, curriculumWithProgress.imgUrl) &&
        Objects.equals(this.itemCount, curriculumWithProgress.itemCount) &&
        Objects.equals(this.renderAs, curriculumWithProgress.renderAs) &&
        Objects.equals(this.visibleToAllUsers, curriculumWithProgress.visibleToAllUsers);
  }

  @Override
  public int hashCode() {
    return Objects.hash(progress, id, name, htmlIntro, imgUrl, itemCount, renderAs, visibleToAllUsers);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CurriculumWithProgress {\n");
    
    sb.append("    progress: ").append(toIndentedString(progress)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    htmlIntro: ").append(toIndentedString(htmlIntro)).append("\n");
    sb.append("    imgUrl: ").append(toIndentedString(imgUrl)).append("\n");
    sb.append("    itemCount: ").append(toIndentedString(itemCount)).append("\n");
    sb.append("    renderAs: ").append(toIndentedString(renderAs)).append("\n");
    sb.append("    visibleToAllUsers: ").append(toIndentedString(visibleToAllUsers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

