/*
 * BombBomb
 * We make it easy to build relationships using simple videos.
 *
 * OpenAPI spec version: 2.0.831
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * The Prompt\\Bot class
 */
@ApiModel(description = "The Prompt\\Bot class")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-30T19:45:38.826Z")
public class PromptBot {
  @SerializedName("id")
  private String id = null;

  @SerializedName("userId")
  private String userId = null;

  @SerializedName("emailId")
  private String emailId = null;

  @SerializedName("listId")
  private String listId = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("contactFieldValueColumn")
  private String contactFieldValueColumn = null;

  @SerializedName("status")
  private Integer status = null;

  @SerializedName("startDate")
  private OffsetDateTime startDate = null;

  @SerializedName("endDate")
  private OffsetDateTime endDate = null;

  @SerializedName("botTypeId")
  private String botTypeId = null;

  @SerializedName("templateId")
  private String templateId = null;

  @SerializedName("videoId")
  private String videoId = null;

  @SerializedName("content")
  private String content = null;

  @SerializedName("subject")
  private String subject = null;

  @SerializedName("generatedBy")
  private String generatedBy = null;

   /**
   * The identifier of the prompt bot. Read Only.
   * @return id
  **/
  @ApiModelProperty(value = "The identifier of the prompt bot. Read Only.")
  public String getId() {
    return id;
  }

   /**
   * The prompt bot&#39;s owner. Read Only.
   * @return userId
  **/
  @ApiModelProperty(value = "The prompt bot's owner. Read Only.")
  public String getUserId() {
    return userId;
  }

  public PromptBot emailId(String emailId) {
    this.emailId = emailId;
    return this;
  }

   /**
   * The default email being sent to contacts in the prompt bot list.
   * @return emailId
  **/
  @ApiModelProperty(value = "The default email being sent to contacts in the prompt bot list.")
  public String getEmailId() {
    return emailId;
  }

  public void setEmailId(String emailId) {
    this.emailId = emailId;
  }

  public PromptBot listId(String listId) {
    this.listId = listId;
    return this;
  }

   /**
   * The list to attach the Prompt Bot to.
   * @return listId
  **/
  @ApiModelProperty(value = "The list to attach the Prompt Bot to.")
  public String getListId() {
    return listId;
  }

  public void setListId(String listId) {
    this.listId = listId;
  }

  public PromptBot name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the bot.
   * @return name
  **/
  @ApiModelProperty(value = "The name of the bot.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public PromptBot contactFieldValueColumn(String contactFieldValueColumn) {
    this.contactFieldValueColumn = contactFieldValueColumn;
    return this;
  }

   /**
   * The custom contact field value column used for this bot.
   * @return contactFieldValueColumn
  **/
  @ApiModelProperty(value = "The custom contact field value column used for this bot.")
  public String getContactFieldValueColumn() {
    return contactFieldValueColumn;
  }

  public void setContactFieldValueColumn(String contactFieldValueColumn) {
    this.contactFieldValueColumn = contactFieldValueColumn;
  }

   /**
   * The status of the prompt bot. Read Only.
   * @return status
  **/
  @ApiModelProperty(value = "The status of the prompt bot. Read Only.")
  public Integer getStatus() {
    return status;
  }

  public PromptBot startDate(OffsetDateTime startDate) {
    this.startDate = startDate;
    return this;
  }

   /**
   * when the bot started
   * @return startDate
  **/
  @ApiModelProperty(value = "when the bot started")
  public OffsetDateTime getStartDate() {
    return startDate;
  }

  public void setStartDate(OffsetDateTime startDate) {
    this.startDate = startDate;
  }

  public PromptBot endDate(OffsetDateTime endDate) {
    this.endDate = endDate;
    return this;
  }

   /**
   * when the bot should finish
   * @return endDate
  **/
  @ApiModelProperty(value = "when the bot should finish")
  public OffsetDateTime getEndDate() {
    return endDate;
  }

  public void setEndDate(OffsetDateTime endDate) {
    this.endDate = endDate;
  }

  public PromptBot botTypeId(String botTypeId) {
    this.botTypeId = botTypeId;
    return this;
  }

   /**
   * The type of bot.
   * @return botTypeId
  **/
  @ApiModelProperty(value = "The type of bot.")
  public String getBotTypeId() {
    return botTypeId;
  }

  public void setBotTypeId(String botTypeId) {
    this.botTypeId = botTypeId;
  }

  public PromptBot templateId(String templateId) {
    this.templateId = templateId;
    return this;
  }

   /**
   * The template id used to generate the default email.
   * @return templateId
  **/
  @ApiModelProperty(value = "The template id used to generate the default email.")
  public String getTemplateId() {
    return templateId;
  }

  public void setTemplateId(String templateId) {
    this.templateId = templateId;
  }

  public PromptBot videoId(String videoId) {
    this.videoId = videoId;
    return this;
  }

   /**
   * The video that was added to the prompt.
   * @return videoId
  **/
  @ApiModelProperty(value = "The video that was added to the prompt.")
  public String getVideoId() {
    return videoId;
  }

  public void setVideoId(String videoId) {
    this.videoId = videoId;
  }

  public PromptBot content(String content) {
    this.content = content;
    return this;
  }

   /**
   * The content to use in the email.
   * @return content
  **/
  @ApiModelProperty(value = "The content to use in the email.")
  public String getContent() {
    return content;
  }

  public void setContent(String content) {
    this.content = content;
  }

  public PromptBot subject(String subject) {
    this.subject = subject;
    return this;
  }

   /**
   * The subject of the default email.
   * @return subject
  **/
  @ApiModelProperty(value = "The subject of the default email.")
  public String getSubject() {
    return subject;
  }

  public void setSubject(String subject) {
    this.subject = subject;
  }

  public PromptBot generatedBy(String generatedBy) {
    this.generatedBy = generatedBy;
    return this;
  }

   /**
   * Set when generated as a default by a bot.
   * @return generatedBy
  **/
  @ApiModelProperty(value = "Set when generated as a default by a bot.")
  public String getGeneratedBy() {
    return generatedBy;
  }

  public void setGeneratedBy(String generatedBy) {
    this.generatedBy = generatedBy;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PromptBot promptBot = (PromptBot) o;
    return Objects.equals(this.id, promptBot.id) &&
        Objects.equals(this.userId, promptBot.userId) &&
        Objects.equals(this.emailId, promptBot.emailId) &&
        Objects.equals(this.listId, promptBot.listId) &&
        Objects.equals(this.name, promptBot.name) &&
        Objects.equals(this.contactFieldValueColumn, promptBot.contactFieldValueColumn) &&
        Objects.equals(this.status, promptBot.status) &&
        Objects.equals(this.startDate, promptBot.startDate) &&
        Objects.equals(this.endDate, promptBot.endDate) &&
        Objects.equals(this.botTypeId, promptBot.botTypeId) &&
        Objects.equals(this.templateId, promptBot.templateId) &&
        Objects.equals(this.videoId, promptBot.videoId) &&
        Objects.equals(this.content, promptBot.content) &&
        Objects.equals(this.subject, promptBot.subject) &&
        Objects.equals(this.generatedBy, promptBot.generatedBy);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, userId, emailId, listId, name, contactFieldValueColumn, status, startDate, endDate, botTypeId, templateId, videoId, content, subject, generatedBy);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PromptBot {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    emailId: ").append(toIndentedString(emailId)).append("\n");
    sb.append("    listId: ").append(toIndentedString(listId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    contactFieldValueColumn: ").append(toIndentedString(contactFieldValueColumn)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    botTypeId: ").append(toIndentedString(botTypeId)).append("\n");
    sb.append("    templateId: ").append(toIndentedString(templateId)).append("\n");
    sb.append("    videoId: ").append(toIndentedString(videoId)).append("\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    generatedBy: ").append(toIndentedString(generatedBy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

