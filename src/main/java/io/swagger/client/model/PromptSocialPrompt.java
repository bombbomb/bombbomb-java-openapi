/*
 * BombBomb
 * We make it easy to build relationships using simple videos.
 *
 * OpenAPI spec version: 2.0.831
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;

/**
 * The Prompt\\SocialPrompt class
 */
@ApiModel(description = "The Prompt\\SocialPrompt class")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-30T19:45:38.826Z")
public class PromptSocialPrompt {
  @SerializedName("id")
  private String id = null;

  @SerializedName("userId")
  private String userId = null;

  @SerializedName("jerichoId")
  private String jerichoId = null;

  @SerializedName("promptSubject")
  private String promptSubject = null;

  @SerializedName("promptHtml")
  private String promptHtml = null;

  @SerializedName("scheduledSendDate")
  private OffsetDateTime scheduledSendDate = null;

  @SerializedName("clientGroupId")
  private String clientGroupId = null;

  @SerializedName("thumbnailUrl")
  private String thumbnailUrl = null;

  @SerializedName("status")
  private Integer status = null;

  @SerializedName("createdDate")
  private OffsetDateTime createdDate = null;

  @SerializedName("lastNotified")
  private OffsetDateTime lastNotified = null;

  @SerializedName("sendMechanism")
  private OffsetDateTime sendMechanism = null;

  @SerializedName("sendTypes")
  private List<String> sendTypes = null;

   /**
   * The identifier of the prompt. Read Only.
   * @return id
  **/
  @ApiModelProperty(value = "The identifier of the prompt. Read Only.")
  public String getId() {
    return id;
  }

   /**
   * The prompt&#39;s owner. Read Only.
   * @return userId
  **/
  @ApiModelProperty(value = "The prompt's owner. Read Only.")
  public String getUserId() {
    return userId;
  }

  public PromptSocialPrompt jerichoId(String jerichoId) {
    this.jerichoId = jerichoId;
    return this;
  }

   /**
   * If sent in a jericho context, this will have the jericho id
   * @return jerichoId
  **/
  @ApiModelProperty(value = "If sent in a jericho context, this will have the jericho id")
  public String getJerichoId() {
    return jerichoId;
  }

  public void setJerichoId(String jerichoId) {
    this.jerichoId = jerichoId;
  }

  public PromptSocialPrompt promptSubject(String promptSubject) {
    this.promptSubject = promptSubject;
    return this;
  }

   /**
   * The prompt&#39;s subject line
   * @return promptSubject
  **/
  @ApiModelProperty(value = "The prompt's subject line")
  public String getPromptSubject() {
    return promptSubject;
  }

  public void setPromptSubject(String promptSubject) {
    this.promptSubject = promptSubject;
  }

  public PromptSocialPrompt promptHtml(String promptHtml) {
    this.promptHtml = promptHtml;
    return this;
  }

   /**
   * The suggested script of the prompt.
   * @return promptHtml
  **/
  @ApiModelProperty(value = "The suggested script of the prompt.")
  public String getPromptHtml() {
    return promptHtml;
  }

  public void setPromptHtml(String promptHtml) {
    this.promptHtml = promptHtml;
  }

  public PromptSocialPrompt scheduledSendDate(OffsetDateTime scheduledSendDate) {
    this.scheduledSendDate = scheduledSendDate;
    return this;
  }

   /**
   * When the final email is scheduled to be sent
   * @return scheduledSendDate
  **/
  @ApiModelProperty(value = "When the final email is scheduled to be sent")
  public OffsetDateTime getScheduledSendDate() {
    return scheduledSendDate;
  }

  public void setScheduledSendDate(OffsetDateTime scheduledSendDate) {
    this.scheduledSendDate = scheduledSendDate;
  }

  public PromptSocialPrompt clientGroupId(String clientGroupId) {
    this.clientGroupId = clientGroupId;
    return this;
  }

   /**
   * The client group campaign that created the prompt.
   * @return clientGroupId
  **/
  @ApiModelProperty(value = "The client group campaign that created the prompt.")
  public String getClientGroupId() {
    return clientGroupId;
  }

  public void setClientGroupId(String clientGroupId) {
    this.clientGroupId = clientGroupId;
  }

  public PromptSocialPrompt thumbnailUrl(String thumbnailUrl) {
    this.thumbnailUrl = thumbnailUrl;
    return this;
  }

   /**
   * The URL of a thumbnail image for this prompt
   * @return thumbnailUrl
  **/
  @ApiModelProperty(value = "The URL of a thumbnail image for this prompt")
  public String getThumbnailUrl() {
    return thumbnailUrl;
  }

  public void setThumbnailUrl(String thumbnailUrl) {
    this.thumbnailUrl = thumbnailUrl;
  }

   /**
   * The status of the prompt: created &#x3D; 0, sent &#x3D; 10, recorded &#x3D; 20, job_created &#x3D; 30, timed_out &#x3D; 40, declined &#x3D; 50 Read Only
   * @return status
  **/
  @ApiModelProperty(value = "The status of the prompt: created = 0, sent = 10, recorded = 20, job_created = 30, timed_out = 40, declined = 50 Read Only")
  public Integer getStatus() {
    return status;
  }

  public PromptSocialPrompt createdDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
    return this;
  }

   /**
   * When the email was first sent out
   * @return createdDate
  **/
  @ApiModelProperty(value = "When the email was first sent out")
  public OffsetDateTime getCreatedDate() {
    return createdDate;
  }

  public void setCreatedDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
  }

  public PromptSocialPrompt lastNotified(OffsetDateTime lastNotified) {
    this.lastNotified = lastNotified;
    return this;
  }

   /**
   * When the user was last notified about a prompt email waiting for a video
   * @return lastNotified
  **/
  @ApiModelProperty(value = "When the user was last notified about a prompt email waiting for a video")
  public OffsetDateTime getLastNotified() {
    return lastNotified;
  }

  public void setLastNotified(OffsetDateTime lastNotified) {
    this.lastNotified = lastNotified;
  }

  public PromptSocialPrompt sendMechanism(OffsetDateTime sendMechanism) {
    this.sendMechanism = sendMechanism;
    return this;
  }

   /**
   * The sendMechanism property
   * @return sendMechanism
  **/
  @ApiModelProperty(value = "The sendMechanism property")
  public OffsetDateTime getSendMechanism() {
    return sendMechanism;
  }

  public void setSendMechanism(OffsetDateTime sendMechanism) {
    this.sendMechanism = sendMechanism;
  }

  public PromptSocialPrompt sendTypes(List<String> sendTypes) {
    this.sendTypes = sendTypes;
    return this;
  }

  public PromptSocialPrompt addSendTypesItem(String sendTypesItem) {
    if (this.sendTypes == null) {
      this.sendTypes = new ArrayList<String>();
    }
    this.sendTypes.add(sendTypesItem);
    return this;
  }

   /**
   * The types of mechanisms this prompt can send.
   * @return sendTypes
  **/
  @ApiModelProperty(value = "The types of mechanisms this prompt can send.")
  public List<String> getSendTypes() {
    return sendTypes;
  }

  public void setSendTypes(List<String> sendTypes) {
    this.sendTypes = sendTypes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PromptSocialPrompt promptSocialPrompt = (PromptSocialPrompt) o;
    return Objects.equals(this.id, promptSocialPrompt.id) &&
        Objects.equals(this.userId, promptSocialPrompt.userId) &&
        Objects.equals(this.jerichoId, promptSocialPrompt.jerichoId) &&
        Objects.equals(this.promptSubject, promptSocialPrompt.promptSubject) &&
        Objects.equals(this.promptHtml, promptSocialPrompt.promptHtml) &&
        Objects.equals(this.scheduledSendDate, promptSocialPrompt.scheduledSendDate) &&
        Objects.equals(this.clientGroupId, promptSocialPrompt.clientGroupId) &&
        Objects.equals(this.thumbnailUrl, promptSocialPrompt.thumbnailUrl) &&
        Objects.equals(this.status, promptSocialPrompt.status) &&
        Objects.equals(this.createdDate, promptSocialPrompt.createdDate) &&
        Objects.equals(this.lastNotified, promptSocialPrompt.lastNotified) &&
        Objects.equals(this.sendMechanism, promptSocialPrompt.sendMechanism) &&
        Objects.equals(this.sendTypes, promptSocialPrompt.sendTypes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, userId, jerichoId, promptSubject, promptHtml, scheduledSendDate, clientGroupId, thumbnailUrl, status, createdDate, lastNotified, sendMechanism, sendTypes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PromptSocialPrompt {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    jerichoId: ").append(toIndentedString(jerichoId)).append("\n");
    sb.append("    promptSubject: ").append(toIndentedString(promptSubject)).append("\n");
    sb.append("    promptHtml: ").append(toIndentedString(promptHtml)).append("\n");
    sb.append("    scheduledSendDate: ").append(toIndentedString(scheduledSendDate)).append("\n");
    sb.append("    clientGroupId: ").append(toIndentedString(clientGroupId)).append("\n");
    sb.append("    thumbnailUrl: ").append(toIndentedString(thumbnailUrl)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    lastNotified: ").append(toIndentedString(lastNotified)).append("\n");
    sb.append("    sendMechanism: ").append(toIndentedString(sendMechanism)).append("\n");
    sb.append("    sendTypes: ").append(toIndentedString(sendTypes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

