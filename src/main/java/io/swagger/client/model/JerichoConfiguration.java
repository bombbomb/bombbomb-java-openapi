/*
 * BombBomb
 * We make it easy to build relationships using simple videos.
 *
 * OpenAPI spec version: 2.0.831
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * JerichoConfiguration
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-30T21:11:01.919Z")
public class JerichoConfiguration {
  @SerializedName("id")
  private String id = null;

  @SerializedName("clientGroupId")
  private String clientGroupId = null;

  @SerializedName("sendDate")
  private OffsetDateTime sendDate = null;

  @SerializedName("isPrompt")
  private Boolean isPrompt = null;

  @SerializedName("printToTemplate")
  private Boolean printToTemplate = null;

  @SerializedName("emailId")
  private String emailId = null;

  @SerializedName("exampleVideoId")
  private String exampleVideoId = null;

  @SerializedName("followUpVideoId")
  private String followUpVideoId = null;

  @SerializedName("promptIntro")
  private String promptIntro = null;

  @SerializedName("promptSubject")
  private String promptSubject = null;

  @SerializedName("promptBody")
  private String promptBody = null;

  @SerializedName("emailSubject")
  private String emailSubject = null;

  @SerializedName("emailBody")
  private String emailBody = null;

  @SerializedName("sendWithoutVideo")
  private Boolean sendWithoutVideo = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("mediaType")
  private String mediaType = null;

  @SerializedName("customInitialEmailSubjectLine")
  private String customInitialEmailSubjectLine = null;

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

   /**
   * Get clientGroupId
   * @return clientGroupId
  **/
  @ApiModelProperty(value = "")
  public String getClientGroupId() {
    return clientGroupId;
  }

  public JerichoConfiguration sendDate(OffsetDateTime sendDate) {
    this.sendDate = sendDate;
    return this;
  }

   /**
   * When the email should be sent.
   * @return sendDate
  **/
  @ApiModelProperty(value = "When the email should be sent.")
  public OffsetDateTime getSendDate() {
    return sendDate;
  }

  public void setSendDate(OffsetDateTime sendDate) {
    this.sendDate = sendDate;
  }

  public JerichoConfiguration isPrompt(Boolean isPrompt) {
    this.isPrompt = isPrompt;
    return this;
  }

   /**
   * Video Prompt: Determines whether this is a static or prompted send.
   * @return isPrompt
  **/
  @ApiModelProperty(required = true, value = "Video Prompt: Determines whether this is a static or prompted send.")
  public Boolean isIsPrompt() {
    return isPrompt;
  }

  public void setIsPrompt(Boolean isPrompt) {
    this.isPrompt = isPrompt;
  }

  public JerichoConfiguration printToTemplate(Boolean printToTemplate) {
    this.printToTemplate = printToTemplate;
    return this;
  }

   /**
   * Controls whether or not the content is printed into a template.
   * @return printToTemplate
  **/
  @ApiModelProperty(value = "Controls whether or not the content is printed into a template.")
  public Boolean isPrintToTemplate() {
    return printToTemplate;
  }

  public void setPrintToTemplate(Boolean printToTemplate) {
    this.printToTemplate = printToTemplate;
  }

  public JerichoConfiguration emailId(String emailId) {
    this.emailId = emailId;
    return this;
  }

   /**
   * Static send: The Email to send on behalf of the group members.
   * @return emailId
  **/
  @ApiModelProperty(value = "Static send: The Email to send on behalf of the group members.")
  public String getEmailId() {
    return emailId;
  }

  public void setEmailId(String emailId) {
    this.emailId = emailId;
  }

  public JerichoConfiguration exampleVideoId(String exampleVideoId) {
    this.exampleVideoId = exampleVideoId;
    return this;
  }

   /**
   * Video Prompt: The Video to include as an example for prompted users.
   * @return exampleVideoId
  **/
  @ApiModelProperty(value = "Video Prompt: The Video to include as an example for prompted users.")
  public String getExampleVideoId() {
    return exampleVideoId;
  }

  public void setExampleVideoId(String exampleVideoId) {
    this.exampleVideoId = exampleVideoId;
  }

  public JerichoConfiguration followUpVideoId(String followUpVideoId) {
    this.followUpVideoId = followUpVideoId;
    return this;
  }

   /**
   * The Video to include in the tracking follow up.
   * @return followUpVideoId
  **/
  @ApiModelProperty(value = "The Video to include in the tracking follow up.")
  public String getFollowUpVideoId() {
    return followUpVideoId;
  }

  public void setFollowUpVideoId(String followUpVideoId) {
    this.followUpVideoId = followUpVideoId;
  }

  public JerichoConfiguration promptIntro(String promptIntro) {
    this.promptIntro = promptIntro;
    return this;
  }

   /**
   * Video Prompt: The intro text directed toward prompted users.
   * @return promptIntro
  **/
  @ApiModelProperty(value = "Video Prompt: The intro text directed toward prompted users.")
  public String getPromptIntro() {
    return promptIntro;
  }

  public void setPromptIntro(String promptIntro) {
    this.promptIntro = promptIntro;
  }

  public JerichoConfiguration promptSubject(String promptSubject) {
    this.promptSubject = promptSubject;
    return this;
  }

   /**
   * Video Prompt: The subject line prompting the user to record a video.
   * @return promptSubject
  **/
  @ApiModelProperty(value = "Video Prompt: The subject line prompting the user to record a video.")
  public String getPromptSubject() {
    return promptSubject;
  }

  public void setPromptSubject(String promptSubject) {
    this.promptSubject = promptSubject;
  }

  public JerichoConfiguration promptBody(String promptBody) {
    this.promptBody = promptBody;
    return this;
  }

   /**
   * Video Prompt: The HTML body of the email prompting the user to record a video.
   * @return promptBody
  **/
  @ApiModelProperty(value = "Video Prompt: The HTML body of the email prompting the user to record a video.")
  public String getPromptBody() {
    return promptBody;
  }

  public void setPromptBody(String promptBody) {
    this.promptBody = promptBody;
  }

  public JerichoConfiguration emailSubject(String emailSubject) {
    this.emailSubject = emailSubject;
    return this;
  }

   /**
   * Video Prompt: The subject line of the final sent email
   * @return emailSubject
  **/
  @ApiModelProperty(value = "Video Prompt: The subject line of the final sent email")
  public String getEmailSubject() {
    return emailSubject;
  }

  public void setEmailSubject(String emailSubject) {
    this.emailSubject = emailSubject;
  }

  public JerichoConfiguration emailBody(String emailBody) {
    this.emailBody = emailBody;
    return this;
  }

   /**
   * Video Prompt: The HTML body of the final sent email.
   * @return emailBody
  **/
  @ApiModelProperty(value = "Video Prompt: The HTML body of the final sent email.")
  public String getEmailBody() {
    return emailBody;
  }

  public void setEmailBody(String emailBody) {
    this.emailBody = emailBody;
  }

  public JerichoConfiguration sendWithoutVideo(Boolean sendWithoutVideo) {
    this.sendWithoutVideo = sendWithoutVideo;
    return this;
  }

   /**
   * Video Prompt: Whether to send the final email if no video was recorded.
   * @return sendWithoutVideo
  **/
  @ApiModelProperty(value = "Video Prompt: Whether to send the final email if no video was recorded.")
  public Boolean isSendWithoutVideo() {
    return sendWithoutVideo;
  }

  public void setSendWithoutVideo(Boolean sendWithoutVideo) {
    this.sendWithoutVideo = sendWithoutVideo;
  }

   /**
   * The state of the send.
   * @return status
  **/
  @ApiModelProperty(value = "The state of the send.")
  public String getStatus() {
    return status;
  }

  public JerichoConfiguration mediaType(String mediaType) {
    this.mediaType = mediaType;
    return this;
  }

   /**
   * The type of media used for a social send
   * @return mediaType
  **/
  @ApiModelProperty(value = "The type of media used for a social send")
  public String getMediaType() {
    return mediaType;
  }

  public void setMediaType(String mediaType) {
    this.mediaType = mediaType;
  }

  public JerichoConfiguration customInitialEmailSubjectLine(String customInitialEmailSubjectLine) {
    this.customInitialEmailSubjectLine = customInitialEmailSubjectLine;
    return this;
  }

   /**
   * The custom subject line for the prompt initial email
   * @return customInitialEmailSubjectLine
  **/
  @ApiModelProperty(value = "The custom subject line for the prompt initial email")
  public String getCustomInitialEmailSubjectLine() {
    return customInitialEmailSubjectLine;
  }

  public void setCustomInitialEmailSubjectLine(String customInitialEmailSubjectLine) {
    this.customInitialEmailSubjectLine = customInitialEmailSubjectLine;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JerichoConfiguration jerichoConfiguration = (JerichoConfiguration) o;
    return Objects.equals(this.id, jerichoConfiguration.id) &&
        Objects.equals(this.clientGroupId, jerichoConfiguration.clientGroupId) &&
        Objects.equals(this.sendDate, jerichoConfiguration.sendDate) &&
        Objects.equals(this.isPrompt, jerichoConfiguration.isPrompt) &&
        Objects.equals(this.printToTemplate, jerichoConfiguration.printToTemplate) &&
        Objects.equals(this.emailId, jerichoConfiguration.emailId) &&
        Objects.equals(this.exampleVideoId, jerichoConfiguration.exampleVideoId) &&
        Objects.equals(this.followUpVideoId, jerichoConfiguration.followUpVideoId) &&
        Objects.equals(this.promptIntro, jerichoConfiguration.promptIntro) &&
        Objects.equals(this.promptSubject, jerichoConfiguration.promptSubject) &&
        Objects.equals(this.promptBody, jerichoConfiguration.promptBody) &&
        Objects.equals(this.emailSubject, jerichoConfiguration.emailSubject) &&
        Objects.equals(this.emailBody, jerichoConfiguration.emailBody) &&
        Objects.equals(this.sendWithoutVideo, jerichoConfiguration.sendWithoutVideo) &&
        Objects.equals(this.status, jerichoConfiguration.status) &&
        Objects.equals(this.mediaType, jerichoConfiguration.mediaType) &&
        Objects.equals(this.customInitialEmailSubjectLine, jerichoConfiguration.customInitialEmailSubjectLine);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, clientGroupId, sendDate, isPrompt, printToTemplate, emailId, exampleVideoId, followUpVideoId, promptIntro, promptSubject, promptBody, emailSubject, emailBody, sendWithoutVideo, status, mediaType, customInitialEmailSubjectLine);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JerichoConfiguration {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    clientGroupId: ").append(toIndentedString(clientGroupId)).append("\n");
    sb.append("    sendDate: ").append(toIndentedString(sendDate)).append("\n");
    sb.append("    isPrompt: ").append(toIndentedString(isPrompt)).append("\n");
    sb.append("    printToTemplate: ").append(toIndentedString(printToTemplate)).append("\n");
    sb.append("    emailId: ").append(toIndentedString(emailId)).append("\n");
    sb.append("    exampleVideoId: ").append(toIndentedString(exampleVideoId)).append("\n");
    sb.append("    followUpVideoId: ").append(toIndentedString(followUpVideoId)).append("\n");
    sb.append("    promptIntro: ").append(toIndentedString(promptIntro)).append("\n");
    sb.append("    promptSubject: ").append(toIndentedString(promptSubject)).append("\n");
    sb.append("    promptBody: ").append(toIndentedString(promptBody)).append("\n");
    sb.append("    emailSubject: ").append(toIndentedString(emailSubject)).append("\n");
    sb.append("    emailBody: ").append(toIndentedString(emailBody)).append("\n");
    sb.append("    sendWithoutVideo: ").append(toIndentedString(sendWithoutVideo)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    mediaType: ").append(toIndentedString(mediaType)).append("\n");
    sb.append("    customInitialEmailSubjectLine: ").append(toIndentedString(customInitialEmailSubjectLine)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

