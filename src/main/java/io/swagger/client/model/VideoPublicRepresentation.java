/*
 * BombBomb
 * We make it easy to build relationships using simple videos.
 *
 * OpenAPI spec version: 2.0.831
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * The VideoPublicRepresentation class
 */
@ApiModel(description = "The VideoPublicRepresentation class")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-30T19:45:38.826Z")
public class VideoPublicRepresentation {
  @SerializedName("id")
  private String id = null;

  @SerializedName("userId")
  private String userId = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("thumbUrl")
  private String thumbUrl = null;

  @SerializedName("videoUrls")
  private List<String> videoUrls = null;

  @SerializedName("shortUrl")
  private String shortUrl = null;

  @SerializedName("height")
  private Integer height = null;

  @SerializedName("width")
  private Integer width = null;

  @SerializedName("uploadDate")
  private String uploadDate = null;

  public VideoPublicRepresentation id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The id of the video
   * @return id
  **/
  @ApiModelProperty(value = "The id of the video")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public VideoPublicRepresentation userId(String userId) {
    this.userId = userId;
    return this;
  }

   /**
   * The is of the owning user
   * @return userId
  **/
  @ApiModelProperty(value = "The is of the owning user")
  public String getUserId() {
    return userId;
  }

  public void setUserId(String userId) {
    this.userId = userId;
  }

  public VideoPublicRepresentation status(String status) {
    this.status = status;
    return this;
  }

   /**
   * The status of the video
   * @return status
  **/
  @ApiModelProperty(value = "The status of the video")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public VideoPublicRepresentation name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the video
   * @return name
  **/
  @ApiModelProperty(value = "The name of the video")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public VideoPublicRepresentation description(String description) {
    this.description = description;
    return this;
  }

   /**
   * A description of the video
   * @return description
  **/
  @ApiModelProperty(value = "A description of the video")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public VideoPublicRepresentation thumbUrl(String thumbUrl) {
    this.thumbUrl = thumbUrl;
    return this;
  }

   /**
   * The url of the thumbnail for the video
   * @return thumbUrl
  **/
  @ApiModelProperty(value = "The url of the thumbnail for the video")
  public String getThumbUrl() {
    return thumbUrl;
  }

  public void setThumbUrl(String thumbUrl) {
    this.thumbUrl = thumbUrl;
  }

  public VideoPublicRepresentation videoUrls(List<String> videoUrls) {
    this.videoUrls = videoUrls;
    return this;
  }

  public VideoPublicRepresentation addVideoUrlsItem(String videoUrlsItem) {
    if (this.videoUrls == null) {
      this.videoUrls = new ArrayList<String>();
    }
    this.videoUrls.add(videoUrlsItem);
    return this;
  }

   /**
   * Urls to different formats of the video
   * @return videoUrls
  **/
  @ApiModelProperty(value = "Urls to different formats of the video")
  public List<String> getVideoUrls() {
    return videoUrls;
  }

  public void setVideoUrls(List<String> videoUrls) {
    this.videoUrls = videoUrls;
  }

  public VideoPublicRepresentation shortUrl(String shortUrl) {
    this.shortUrl = shortUrl;
    return this;
  }

   /**
   * The url to use to link to the video
   * @return shortUrl
  **/
  @ApiModelProperty(value = "The url to use to link to the video")
  public String getShortUrl() {
    return shortUrl;
  }

  public void setShortUrl(String shortUrl) {
    this.shortUrl = shortUrl;
  }

  public VideoPublicRepresentation height(Integer height) {
    this.height = height;
    return this;
  }

   /**
   * The height of the video in pixels
   * @return height
  **/
  @ApiModelProperty(value = "The height of the video in pixels")
  public Integer getHeight() {
    return height;
  }

  public void setHeight(Integer height) {
    this.height = height;
  }

  public VideoPublicRepresentation width(Integer width) {
    this.width = width;
    return this;
  }

   /**
   * The width of the video in pixels
   * @return width
  **/
  @ApiModelProperty(value = "The width of the video in pixels")
  public Integer getWidth() {
    return width;
  }

  public void setWidth(Integer width) {
    this.width = width;
  }

  public VideoPublicRepresentation uploadDate(String uploadDate) {
    this.uploadDate = uploadDate;
    return this;
  }

   /**
   * The date the video was uploaded
   * @return uploadDate
  **/
  @ApiModelProperty(value = "The date the video was uploaded")
  public String getUploadDate() {
    return uploadDate;
  }

  public void setUploadDate(String uploadDate) {
    this.uploadDate = uploadDate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VideoPublicRepresentation videoPublicRepresentation = (VideoPublicRepresentation) o;
    return Objects.equals(this.id, videoPublicRepresentation.id) &&
        Objects.equals(this.userId, videoPublicRepresentation.userId) &&
        Objects.equals(this.status, videoPublicRepresentation.status) &&
        Objects.equals(this.name, videoPublicRepresentation.name) &&
        Objects.equals(this.description, videoPublicRepresentation.description) &&
        Objects.equals(this.thumbUrl, videoPublicRepresentation.thumbUrl) &&
        Objects.equals(this.videoUrls, videoPublicRepresentation.videoUrls) &&
        Objects.equals(this.shortUrl, videoPublicRepresentation.shortUrl) &&
        Objects.equals(this.height, videoPublicRepresentation.height) &&
        Objects.equals(this.width, videoPublicRepresentation.width) &&
        Objects.equals(this.uploadDate, videoPublicRepresentation.uploadDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, userId, status, name, description, thumbUrl, videoUrls, shortUrl, height, width, uploadDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VideoPublicRepresentation {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    thumbUrl: ").append(toIndentedString(thumbUrl)).append("\n");
    sb.append("    videoUrls: ").append(toIndentedString(videoUrls)).append("\n");
    sb.append("    shortUrl: ").append(toIndentedString(shortUrl)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    width: ").append(toIndentedString(width)).append("\n");
    sb.append("    uploadDate: ").append(toIndentedString(uploadDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

