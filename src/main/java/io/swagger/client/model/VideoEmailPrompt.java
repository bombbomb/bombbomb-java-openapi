/**
 * BombBomb
 * We make it easy to build relationships using simple videos.
 *
 * OpenAPI spec version: 2.0.24005
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.joda.time.DateTime;


/**
 * Configures a single prompt which asks a user to record a video into an outgoing email.
 */
@ApiModel(description = "Configures a single prompt which asks a user to record a video into an outgoing email.")
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-07-26T15:26:36.973Z")
public class VideoEmailPrompt   {
  @SerializedName("id")
  private String id = null;

  @SerializedName("userId")
  private String userId = null;

  @SerializedName("templateId")
  private String templateId = null;

  @SerializedName("emailSubjectLine")
  private String emailSubjectLine = null;

  @SerializedName("emailContent")
  private String emailContent = null;

  @SerializedName("thumbnailUrl")
  private String thumbnailUrl = null;

  @SerializedName("contactId")
  private String contactId = null;

  @SerializedName("toLists")
  private List<String> toLists = new ArrayList<String>();

  @SerializedName("jerichoId")
  private String jerichoId = null;

  @SerializedName("promptSubject")
  private String promptSubject = null;

  @SerializedName("promptHtml")
  private String promptHtml = null;

  @SerializedName("promptIntro")
  private String promptIntro = null;

  @SerializedName("exampleVideoId")
  private String exampleVideoId = null;

  @SerializedName("followupVideoId")
  private String followupVideoId = null;

  @SerializedName("sendWithoutVideo")
  private Boolean sendWithoutVideo = null;

  @SerializedName("videoDueDate")
  private DateTime videoDueDate = null;

  @SerializedName("scheduledSendDate")
  private DateTime scheduledSendDate = null;

  @SerializedName("videoId")
  private String videoId = null;

  @SerializedName("emailId")
  private String emailId = null;

  @SerializedName("jobId")
  private String jobId = null;

  @SerializedName("promptBotId")
  private String promptBotId = null;

  @SerializedName("clientGroupId")
  private String clientGroupId = null;

  @SerializedName("status")
  private Integer status = null;

  @SerializedName("applyTemplate")
  private Boolean applyTemplate = null;

  @SerializedName("createdDate")
  private DateTime createdDate = null;

  @SerializedName("lastNotified")
  private DateTime lastNotified = null;

   /**
   * The identifier of the prompt. Read Only.
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "The identifier of the prompt. Read Only.")
  public String getId() {
    return id;
  }

   /**
   * The prompt's owner. Read Only.
   * @return userId
  **/
  @ApiModelProperty(example = "null", value = "The prompt's owner. Read Only.")
  public String getUserId() {
    return userId;
  }

  public VideoEmailPrompt templateId(String templateId) {
    this.templateId = templateId;
    return this;
  }

   /**
   * Optional. The email template to be used in the sent email, if none supplied, the users' default will be applied.
   * @return templateId
  **/
  @ApiModelProperty(example = "null", value = "Optional. The email template to be used in the sent email, if none supplied, the users' default will be applied.")
  public String getTemplateId() {
    return templateId;
  }

  public void setTemplateId(String templateId) {
    this.templateId = templateId;
  }

  public VideoEmailPrompt emailSubjectLine(String emailSubjectLine) {
    this.emailSubjectLine = emailSubjectLine;
    return this;
  }

   /**
   * The subject line of the final email
   * @return emailSubjectLine
  **/
  @ApiModelProperty(example = "null", required = true, value = "The subject line of the final email")
  public String getEmailSubjectLine() {
    return emailSubjectLine;
  }

  public void setEmailSubjectLine(String emailSubjectLine) {
    this.emailSubjectLine = emailSubjectLine;
  }

  public VideoEmailPrompt emailContent(String emailContent) {
    this.emailContent = emailContent;
    return this;
  }

   /**
   * The HTML content of the final email
   * @return emailContent
  **/
  @ApiModelProperty(example = "null", required = true, value = "The HTML content of the final email")
  public String getEmailContent() {
    return emailContent;
  }

  public void setEmailContent(String emailContent) {
    this.emailContent = emailContent;
  }

  public VideoEmailPrompt thumbnailUrl(String thumbnailUrl) {
    this.thumbnailUrl = thumbnailUrl;
    return this;
  }

   /**
   * The URL of a thumbnail image for this prompt
   * @return thumbnailUrl
  **/
  @ApiModelProperty(example = "null", value = "The URL of a thumbnail image for this prompt")
  public String getThumbnailUrl() {
    return thumbnailUrl;
  }

  public void setThumbnailUrl(String thumbnailUrl) {
    this.thumbnailUrl = thumbnailUrl;
  }

  public VideoEmailPrompt contactId(String contactId) {
    this.contactId = contactId;
    return this;
  }

   /**
   * Contact Id to send the final email to
   * @return contactId
  **/
  @ApiModelProperty(example = "null", value = "Contact Id to send the final email to")
  public String getContactId() {
    return contactId;
  }

  public void setContactId(String contactId) {
    this.contactId = contactId;
  }

  public VideoEmailPrompt toLists(List<String> toLists) {
    this.toLists = toLists;
    return this;
  }

  public VideoEmailPrompt addToListsItem(String toListsItem) {
    this.toLists.add(toListsItem);
    return this;
  }

   /**
   * List Ids to send the final email to
   * @return toLists
  **/
  @ApiModelProperty(example = "null", value = "List Ids to send the final email to")
  public List<String> getToLists() {
    return toLists;
  }

  public void setToLists(List<String> toLists) {
    this.toLists = toLists;
  }

  public VideoEmailPrompt jerichoId(String jerichoId) {
    this.jerichoId = jerichoId;
    return this;
  }

   /**
   * If sent in a jericho context, this will have the jericho id
   * @return jerichoId
  **/
  @ApiModelProperty(example = "null", value = "If sent in a jericho context, this will have the jericho id")
  public String getJerichoId() {
    return jerichoId;
  }

  public void setJerichoId(String jerichoId) {
    this.jerichoId = jerichoId;
  }

  public VideoEmailPrompt promptSubject(String promptSubject) {
    this.promptSubject = promptSubject;
    return this;
  }

   /**
   * The prompt's subject line
   * @return promptSubject
  **/
  @ApiModelProperty(example = "null", required = true, value = "The prompt's subject line")
  public String getPromptSubject() {
    return promptSubject;
  }

  public void setPromptSubject(String promptSubject) {
    this.promptSubject = promptSubject;
  }

  public VideoEmailPrompt promptHtml(String promptHtml) {
    this.promptHtml = promptHtml;
    return this;
  }

   /**
   * The suggested script of the prompt.
   * @return promptHtml
  **/
  @ApiModelProperty(example = "null", required = true, value = "The suggested script of the prompt.")
  public String getPromptHtml() {
    return promptHtml;
  }

  public void setPromptHtml(String promptHtml) {
    this.promptHtml = promptHtml;
  }

  public VideoEmailPrompt promptIntro(String promptIntro) {
    this.promptIntro = promptIntro;
    return this;
  }

   /**
   * A paragraph intro statement about the purpose of the email you're recording a video for.
   * @return promptIntro
  **/
  @ApiModelProperty(example = "null", value = "A paragraph intro statement about the purpose of the email you're recording a video for.")
  public String getPromptIntro() {
    return promptIntro;
  }

  public void setPromptIntro(String promptIntro) {
    this.promptIntro = promptIntro;
  }

  public VideoEmailPrompt exampleVideoId(String exampleVideoId) {
    this.exampleVideoId = exampleVideoId;
    return this;
  }

   /**
   * An example or explanatory video to help the user understand what to say.
   * @return exampleVideoId
  **/
  @ApiModelProperty(example = "null", value = "An example or explanatory video to help the user understand what to say.")
  public String getExampleVideoId() {
    return exampleVideoId;
  }

  public void setExampleVideoId(String exampleVideoId) {
    this.exampleVideoId = exampleVideoId;
  }

  public VideoEmailPrompt followupVideoId(String followupVideoId) {
    this.followupVideoId = followupVideoId;
    return this;
  }

   /**
   * An example or explanatory video to help the user understand what to say.
   * @return followupVideoId
  **/
  @ApiModelProperty(example = "null", value = "An example or explanatory video to help the user understand what to say.")
  public String getFollowupVideoId() {
    return followupVideoId;
  }

  public void setFollowupVideoId(String followupVideoId) {
    this.followupVideoId = followupVideoId;
  }

  public VideoEmailPrompt sendWithoutVideo(Boolean sendWithoutVideo) {
    this.sendWithoutVideo = sendWithoutVideo;
    return this;
  }

   /**
   * Whether to send the email if no video is recorded. If set to require a video, and none is added before the videoDueDate, the prompt is cancelled.
   * @return sendWithoutVideo
  **/
  @ApiModelProperty(example = "null", value = "Whether to send the email if no video is recorded. If set to require a video, and none is added before the videoDueDate, the prompt is cancelled.")
  public Boolean getSendWithoutVideo() {
    return sendWithoutVideo;
  }

  public void setSendWithoutVideo(Boolean sendWithoutVideo) {
    this.sendWithoutVideo = sendWithoutVideo;
  }

  public VideoEmailPrompt videoDueDate(DateTime videoDueDate) {
    this.videoDueDate = videoDueDate;
    return this;
  }

   /**
   * When the video must be recorded by
   * @return videoDueDate
  **/
  @ApiModelProperty(example = "null", value = "When the video must be recorded by")
  public DateTime getVideoDueDate() {
    return videoDueDate;
  }

  public void setVideoDueDate(DateTime videoDueDate) {
    this.videoDueDate = videoDueDate;
  }

  public VideoEmailPrompt scheduledSendDate(DateTime scheduledSendDate) {
    this.scheduledSendDate = scheduledSendDate;
    return this;
  }

   /**
   * When the final email is scheduled to be sent
   * @return scheduledSendDate
  **/
  @ApiModelProperty(example = "null", required = true, value = "When the final email is scheduled to be sent")
  public DateTime getScheduledSendDate() {
    return scheduledSendDate;
  }

  public void setScheduledSendDate(DateTime scheduledSendDate) {
    this.scheduledSendDate = scheduledSendDate;
  }

   /**
   * The video that was added to the prompt. Read Only.
   * @return videoId
  **/
  @ApiModelProperty(example = "null", value = "The video that was added to the prompt. Read Only.")
  public String getVideoId() {
    return videoId;
  }

   /**
   * The email that was created by the prompt Read Only.
   * @return emailId
  **/
  @ApiModelProperty(example = "null", value = "The email that was created by the prompt Read Only.")
  public String getEmailId() {
    return emailId;
  }

   /**
   * The job sent by the prompt Read Only.
   * @return jobId
  **/
  @ApiModelProperty(example = "null", value = "The job sent by the prompt Read Only.")
  public String getJobId() {
    return jobId;
  }

  public VideoEmailPrompt promptBotId(String promptBotId) {
    this.promptBotId = promptBotId;
    return this;
  }

   /**
   * The bot that created the prompt.
   * @return promptBotId
  **/
  @ApiModelProperty(example = "null", value = "The bot that created the prompt.")
  public String getPromptBotId() {
    return promptBotId;
  }

  public void setPromptBotId(String promptBotId) {
    this.promptBotId = promptBotId;
  }

  public VideoEmailPrompt clientGroupId(String clientGroupId) {
    this.clientGroupId = clientGroupId;
    return this;
  }

   /**
   * The client group campaign that created the prompt.
   * @return clientGroupId
  **/
  @ApiModelProperty(example = "null", value = "The client group campaign that created the prompt.")
  public String getClientGroupId() {
    return clientGroupId;
  }

  public void setClientGroupId(String clientGroupId) {
    this.clientGroupId = clientGroupId;
  }

   /**
   * The status of the prompt: created = 0, sent = 10, recorded = 20, job_created = 30, timed_out = 40, declined = 50 Read Only
   * @return status
  **/
  @ApiModelProperty(example = "null", value = "The status of the prompt: created = 0, sent = 10, recorded = 20, job_created = 30, timed_out = 40, declined = 50 Read Only")
  public Integer getStatus() {
    return status;
  }

  public VideoEmailPrompt applyTemplate(Boolean applyTemplate) {
    this.applyTemplate = applyTemplate;
    return this;
  }

   /**
   * Controls whether a user template is applied to the message as it is sent
   * @return applyTemplate
  **/
  @ApiModelProperty(example = "null", value = "Controls whether a user template is applied to the message as it is sent")
  public Boolean getApplyTemplate() {
    return applyTemplate;
  }

  public void setApplyTemplate(Boolean applyTemplate) {
    this.applyTemplate = applyTemplate;
  }

  public VideoEmailPrompt createdDate(DateTime createdDate) {
    this.createdDate = createdDate;
    return this;
  }

   /**
   * When the email was first sent out
   * @return createdDate
  **/
  @ApiModelProperty(example = "null", value = "When the email was first sent out")
  public DateTime getCreatedDate() {
    return createdDate;
  }

  public void setCreatedDate(DateTime createdDate) {
    this.createdDate = createdDate;
  }

  public VideoEmailPrompt lastNotified(DateTime lastNotified) {
    this.lastNotified = lastNotified;
    return this;
  }

   /**
   * When the user was last notified about a prompt email waiting for a video
   * @return lastNotified
  **/
  @ApiModelProperty(example = "null", value = "When the user was last notified about a prompt email waiting for a video")
  public DateTime getLastNotified() {
    return lastNotified;
  }

  public void setLastNotified(DateTime lastNotified) {
    this.lastNotified = lastNotified;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VideoEmailPrompt videoEmailPrompt = (VideoEmailPrompt) o;
    return Objects.equals(this.id, videoEmailPrompt.id) &&
        Objects.equals(this.userId, videoEmailPrompt.userId) &&
        Objects.equals(this.templateId, videoEmailPrompt.templateId) &&
        Objects.equals(this.emailSubjectLine, videoEmailPrompt.emailSubjectLine) &&
        Objects.equals(this.emailContent, videoEmailPrompt.emailContent) &&
        Objects.equals(this.thumbnailUrl, videoEmailPrompt.thumbnailUrl) &&
        Objects.equals(this.contactId, videoEmailPrompt.contactId) &&
        Objects.equals(this.toLists, videoEmailPrompt.toLists) &&
        Objects.equals(this.jerichoId, videoEmailPrompt.jerichoId) &&
        Objects.equals(this.promptSubject, videoEmailPrompt.promptSubject) &&
        Objects.equals(this.promptHtml, videoEmailPrompt.promptHtml) &&
        Objects.equals(this.promptIntro, videoEmailPrompt.promptIntro) &&
        Objects.equals(this.exampleVideoId, videoEmailPrompt.exampleVideoId) &&
        Objects.equals(this.followupVideoId, videoEmailPrompt.followupVideoId) &&
        Objects.equals(this.sendWithoutVideo, videoEmailPrompt.sendWithoutVideo) &&
        Objects.equals(this.videoDueDate, videoEmailPrompt.videoDueDate) &&
        Objects.equals(this.scheduledSendDate, videoEmailPrompt.scheduledSendDate) &&
        Objects.equals(this.videoId, videoEmailPrompt.videoId) &&
        Objects.equals(this.emailId, videoEmailPrompt.emailId) &&
        Objects.equals(this.jobId, videoEmailPrompt.jobId) &&
        Objects.equals(this.promptBotId, videoEmailPrompt.promptBotId) &&
        Objects.equals(this.clientGroupId, videoEmailPrompt.clientGroupId) &&
        Objects.equals(this.status, videoEmailPrompt.status) &&
        Objects.equals(this.applyTemplate, videoEmailPrompt.applyTemplate) &&
        Objects.equals(this.createdDate, videoEmailPrompt.createdDate) &&
        Objects.equals(this.lastNotified, videoEmailPrompt.lastNotified);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, userId, templateId, emailSubjectLine, emailContent, thumbnailUrl, contactId, toLists, jerichoId, promptSubject, promptHtml, promptIntro, exampleVideoId, followupVideoId, sendWithoutVideo, videoDueDate, scheduledSendDate, videoId, emailId, jobId, promptBotId, clientGroupId, status, applyTemplate, createdDate, lastNotified);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VideoEmailPrompt {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    templateId: ").append(toIndentedString(templateId)).append("\n");
    sb.append("    emailSubjectLine: ").append(toIndentedString(emailSubjectLine)).append("\n");
    sb.append("    emailContent: ").append(toIndentedString(emailContent)).append("\n");
    sb.append("    thumbnailUrl: ").append(toIndentedString(thumbnailUrl)).append("\n");
    sb.append("    contactId: ").append(toIndentedString(contactId)).append("\n");
    sb.append("    toLists: ").append(toIndentedString(toLists)).append("\n");
    sb.append("    jerichoId: ").append(toIndentedString(jerichoId)).append("\n");
    sb.append("    promptSubject: ").append(toIndentedString(promptSubject)).append("\n");
    sb.append("    promptHtml: ").append(toIndentedString(promptHtml)).append("\n");
    sb.append("    promptIntro: ").append(toIndentedString(promptIntro)).append("\n");
    sb.append("    exampleVideoId: ").append(toIndentedString(exampleVideoId)).append("\n");
    sb.append("    followupVideoId: ").append(toIndentedString(followupVideoId)).append("\n");
    sb.append("    sendWithoutVideo: ").append(toIndentedString(sendWithoutVideo)).append("\n");
    sb.append("    videoDueDate: ").append(toIndentedString(videoDueDate)).append("\n");
    sb.append("    scheduledSendDate: ").append(toIndentedString(scheduledSendDate)).append("\n");
    sb.append("    videoId: ").append(toIndentedString(videoId)).append("\n");
    sb.append("    emailId: ").append(toIndentedString(emailId)).append("\n");
    sb.append("    jobId: ").append(toIndentedString(jobId)).append("\n");
    sb.append("    promptBotId: ").append(toIndentedString(promptBotId)).append("\n");
    sb.append("    clientGroupId: ").append(toIndentedString(clientGroupId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    applyTemplate: ").append(toIndentedString(applyTemplate)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    lastNotified: ").append(toIndentedString(lastNotified)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

