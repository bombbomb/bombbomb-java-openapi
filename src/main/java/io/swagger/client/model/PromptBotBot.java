/**
 * BombBomb
 * We make it easy to build relationships using simple videos.
 *
 * OpenAPI spec version: 2.0.22196
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;


/**
 * The PromptBot\\Bot class
 */
@ApiModel(description = "The PromptBot\\Bot class")
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-01-23T19:40:50.835Z")
public class PromptBotBot   {
  @SerializedName("id")
  private String id = null;

  @SerializedName("userId")
  private String userId = null;

  @SerializedName("emailId")
  private String emailId = null;

  @SerializedName("listId")
  private String listId = null;

  @SerializedName("promptSubject")
  private String promptSubject = null;

  @SerializedName("promptBody")
  private String promptBody = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("startDate")
  private DateTime startDate = null;

  @SerializedName("endDate")
  private DateTime endDate = null;

  @SerializedName("botTypeId")
  private String botTypeId = null;

  @SerializedName("templateId")
  private String templateId = null;

   /**
   * The identifier of the prompt bot. Read Only.
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "The identifier of the prompt bot. Read Only.")
  public String getId() {
    return id;
  }

   /**
   * The prompt bot's owner. Read Only.
   * @return userId
  **/
  @ApiModelProperty(example = "null", value = "The prompt bot's owner. Read Only.")
  public String getUserId() {
    return userId;
  }

  public PromptBotBot emailId(String emailId) {
    this.emailId = emailId;
    return this;
  }

   /**
   * The default email being sent to contacts in the prompt bot list.
   * @return emailId
  **/
  @ApiModelProperty(example = "null", value = "The default email being sent to contacts in the prompt bot list.")
  public String getEmailId() {
    return emailId;
  }

  public void setEmailId(String emailId) {
    this.emailId = emailId;
  }

  public PromptBotBot listId(String listId) {
    this.listId = listId;
    return this;
  }

   /**
   * The list to attach the Prompt Bot to.
   * @return listId
  **/
  @ApiModelProperty(example = "null", value = "The list to attach the Prompt Bot to.")
  public String getListId() {
    return listId;
  }

  public void setListId(String listId) {
    this.listId = listId;
  }

  public PromptBotBot promptSubject(String promptSubject) {
    this.promptSubject = promptSubject;
    return this;
  }

   /**
   * The prompt subject.
   * @return promptSubject
  **/
  @ApiModelProperty(example = "null", value = "The prompt subject.")
  public String getPromptSubject() {
    return promptSubject;
  }

  public void setPromptSubject(String promptSubject) {
    this.promptSubject = promptSubject;
  }

  public PromptBotBot promptBody(String promptBody) {
    this.promptBody = promptBody;
    return this;
  }

   /**
   * The prompt body.
   * @return promptBody
  **/
  @ApiModelProperty(example = "null", value = "The prompt body.")
  public String getPromptBody() {
    return promptBody;
  }

  public void setPromptBody(String promptBody) {
    this.promptBody = promptBody;
  }

   /**
   * The status of the prompt bot. Read Only.
   * @return status
  **/
  @ApiModelProperty(example = "null", value = "The status of the prompt bot. Read Only.")
  public String getStatus() {
    return status;
  }

  public PromptBotBot startDate(DateTime startDate) {
    this.startDate = startDate;
    return this;
  }

   /**
   * when the bot started
   * @return startDate
  **/
  @ApiModelProperty(example = "null", value = "when the bot started")
  public DateTime getStartDate() {
    return startDate;
  }

  public void setStartDate(DateTime startDate) {
    this.startDate = startDate;
  }

  public PromptBotBot endDate(DateTime endDate) {
    this.endDate = endDate;
    return this;
  }

   /**
   * when the bot should finish
   * @return endDate
  **/
  @ApiModelProperty(example = "null", value = "when the bot should finish")
  public DateTime getEndDate() {
    return endDate;
  }

  public void setEndDate(DateTime endDate) {
    this.endDate = endDate;
  }

  public PromptBotBot botTypeId(String botTypeId) {
    this.botTypeId = botTypeId;
    return this;
  }

   /**
   * The type of bot.
   * @return botTypeId
  **/
  @ApiModelProperty(example = "null", value = "The type of bot.")
  public String getBotTypeId() {
    return botTypeId;
  }

  public void setBotTypeId(String botTypeId) {
    this.botTypeId = botTypeId;
  }

  public PromptBotBot templateId(String templateId) {
    this.templateId = templateId;
    return this;
  }

   /**
   * The template id used to generate the default email.
   * @return templateId
  **/
  @ApiModelProperty(example = "null", value = "The template id used to generate the default email.")
  public String getTemplateId() {
    return templateId;
  }

  public void setTemplateId(String templateId) {
    this.templateId = templateId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PromptBotBot promptBotBot = (PromptBotBot) o;
    return Objects.equals(this.id, promptBotBot.id) &&
        Objects.equals(this.userId, promptBotBot.userId) &&
        Objects.equals(this.emailId, promptBotBot.emailId) &&
        Objects.equals(this.listId, promptBotBot.listId) &&
        Objects.equals(this.promptSubject, promptBotBot.promptSubject) &&
        Objects.equals(this.promptBody, promptBotBot.promptBody) &&
        Objects.equals(this.status, promptBotBot.status) &&
        Objects.equals(this.startDate, promptBotBot.startDate) &&
        Objects.equals(this.endDate, promptBotBot.endDate) &&
        Objects.equals(this.botTypeId, promptBotBot.botTypeId) &&
        Objects.equals(this.templateId, promptBotBot.templateId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, userId, emailId, listId, promptSubject, promptBody, status, startDate, endDate, botTypeId, templateId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PromptBotBot {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    emailId: ").append(toIndentedString(emailId)).append("\n");
    sb.append("    listId: ").append(toIndentedString(listId)).append("\n");
    sb.append("    promptSubject: ").append(toIndentedString(promptSubject)).append("\n");
    sb.append("    promptBody: ").append(toIndentedString(promptBody)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    botTypeId: ").append(toIndentedString(botTypeId)).append("\n");
    sb.append("    templateId: ").append(toIndentedString(templateId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

